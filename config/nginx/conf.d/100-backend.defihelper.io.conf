server {
    listen      443 ssl http2;

    server_name backend-local.defihelper.info;

    ssl_certificate     /etc/nginx/ssl/defihelper.io.crt;
    ssl_certificate_key /etc/nginx/ssl/defihelper.io.key;

	set $upstream http://dfh-backend:8080;

	set $ref "*";
	if ($http_referer ~* ^(https?\:\/\/)(.*?)\/(.*)$) {
	  set $ref $1$2;
	}

	location / {
        try_files      $uri      @backend;
    }

	location ~ "^/protocol/opengraph-preview/" {
		add_header X-Cache-Status $upstream_cache_status;

        proxy_cache cache_imgproxy;
        proxy_pass $upstream;
    }

    location @backend {
        proxy_pass $upstream;
        proxy_set_header Host $host;
        proxy_set_header Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_connect_timeout 120;
        proxy_send_timeout 120;
        proxy_read_timeout 180;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Methods;

        add_header 'Access-Control-Allow-Origin' $ref always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,signature,timestamp,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }
}

server {
    listen      80;

    server_name backend-local.defihelper.info;

    if ($host = backend-local.defihelper.info) {
        return 301 https://$host$request_uri;
    }

    return 404;
}
